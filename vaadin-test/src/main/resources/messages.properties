test.case.class.boolean.field=Boolean Field
test.case.class.boolean.field{off}=off
test.case.class.boolean.field{on}=on
test.case.class.enumeration.2.field=Enumeration 2 Field
test.case.class.enumeration.field=Enumeration Field
test.case.class.enumeration.field[not-equal]=Enumeration Field value should be equal to []
test.case.class.int.field=Int Field 2
test.case.class.int.field[integer]=Int Field value should be an integer
test.case.class.int.field[max]=Int Field value should be lesser than []
test.case.class.int.field[min]=Int Field value should be greater than []
test.case.class.list.field=List Field
test.case.class.mapped.int.field=Mapped Int Field
test.case.class.new.int.field=New Int Field
test.case.class.new.int.field[integer]=New Int Field value should be an integer
test.case.class.new.int.field[max]=New Int Field value should be lesser than []
test.case.class.new.int.field[min]=New Int Field value should be greater than []
test.case.class.option.field=Option Field
test.case.class.option.field[all.positive]=Option Field should be [All Positive]
test.case.class.option.field[integer]=Option Field value should be an integer
test.case.class.option.field[op]=Option Field Op
test.case.class.password.field=Password Field
test.case.class.reset=Reset
test.case.class.string.field=String Field
test.case.class.string.field[non-empty]=String Field value should not be empty
test.case.class.submit=Submit
test.key=Test Key
test.key[(integer,should be an integer)]= should be [(integer,should be an integer)]
test.key[integer]=Test Key value should be an integer
test.key[min]= value should be greater than []
